{"version":3,"sources":["Components/Card/card.component.jsx","Components/CardList/cardList.component.jsx","Components/SearchBox/searchBox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","width","height","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","searchBoxChanged","e","setState","searchField","target","value","state","fetch","then","res","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,aAAuDC,MAAM,QAAQC,OAAO,UACpF,6BAAKN,EAAMG,QAAQI,OACnB,4BAAIP,EAAMG,QAAQK,YCHbC,EAAW,SAAAT,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACKD,EAAMU,SAASC,KAAI,SAAAR,GAAO,OACxB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJjBQ,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCwCHG,E,kDA1Cb,aAAe,IAAD,8BACZ,gBAeFC,iBAAmB,SAACC,GAClB,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAfrC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJH,E,qDAUd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,SAAUmB,S,oBAO5C,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YAIZU,EAAmBrB,EAASsB,QAAO,SAAA7B,GACvC,QAAGA,EAAQI,KAAK0B,cAAcC,SAASb,EAAYY,kBAMrD,OACE,sBAAKhC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWY,YAAY,kBAAkBC,aAAcgB,KAAKZ,mBAC5D,cAAC,EAAD,CAAUR,SAAUqB,W,GArCVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.18cb1c43.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\n\r\nexport const Card = props => (\r\n    <div className=\"card\">\r\n        <img src={`https://robohash.org/${props.monster.id}?set=set2`} width=\"180px\" height=\"180px\"/>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n);","import React from 'react';\r\nimport './cardList.style.css';\r\nimport { Card } from '../Card/card.component';\r\n\r\nexport const CardList = props => (\r\n    <div className=\"card-list\">\r\n        {props.monsters.map(monster => \r\n           <Card key={monster.id} monster={monster} /> \r\n        )}\r\n    </div>\r\n);","import React from 'react';\r\nimport './searchBox.style.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input \r\n        className=\"search\"\r\n        type=\"search\" \r\n        placeholder={placeholder}\r\n        onChange={handleChange} />\r\n);","import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './Components/CardList/cardList.component';\nimport { SearchBox } from './Components/SearchBox/searchBox.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n\n    // this.searchBoxChanged = this.searchBoxChanged.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n      .then(users => this.setState({monsters: users}));\n  }\n\n  searchBoxChanged = (e) => {\n    this.setState({searchField: e.target.value});\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    // const monsters = this.state.monsters;\n    // const searchField = this.state.searchField;\n\n    const filteredMonsters = monsters.filter(monster => {\n      if(monster.name.toLowerCase().includes(searchField.toLowerCase())) {\n        return true;\n      }else {\n        return false;\n      }\n    })\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder=\"Search Monsters\" handleChange={this.searchBoxChanged} />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}